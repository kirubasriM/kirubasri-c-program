/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* shortestToChar(char* s, char c, int* returnSize) {
    int slen = strlen(s);
    *returnSize = slen;
    int* ans = malloc(slen * sizeof(int));

    int i = 0;              // Index of char in string s
    int head = 0, tail = 0; // Fill array ans
    int k = 0;              // Distance from Zero

    // Find the Zero
    while (s[i] != '\0') {
        if (s[i] == c) {
            head = i;
            while (0 <= head) {
                ans[head--] = k;
                k++;
            }
            tail = i;
            break;
        }
        i++;
    }
    // Inbetween 2 Zero's, Fill in arr ans
    while (s[i] != '\0') {
        if (s[i] == c) {
            k = 0;
            head = i;
            while (tail <= head) {
                ans[head--] = k;
                ans[tail++] = k;
                k++;
            }
            tail = i;
        }
        i++;
    }

    // The last Zero before end of string
    k = 0;
    while (s[tail] != '\0') {
        ans[tail++] = k++;
    }

    return ans;
}
